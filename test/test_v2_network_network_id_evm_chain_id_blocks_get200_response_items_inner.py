# coding: utf-8

"""
    Avascan API

    Avalanche multi-chain explorer API docs

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.v2_network_network_id_evm_chain_id_blocks_get200_response_items_inner import V2NetworkNetworkIdEvmChainIdBlocksGet200ResponseItemsInner

class TestV2NetworkNetworkIdEvmChainIdBlocksGet200ResponseItemsInner(unittest.TestCase):
    """V2NetworkNetworkIdEvmChainIdBlocksGet200ResponseItemsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2NetworkNetworkIdEvmChainIdBlocksGet200ResponseItemsInner:
        """Test V2NetworkNetworkIdEvmChainIdBlocksGet200ResponseItemsInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2NetworkNetworkIdEvmChainIdBlocksGet200ResponseItemsInner`
        """
        model = V2NetworkNetworkIdEvmChainIdBlocksGet200ResponseItemsInner()
        if include_optional:
            return V2NetworkNetworkIdEvmChainIdBlocksGet200ResponseItemsInner(
                number = 1.337,
                id = '',
                parent = '',
                chain_id = '',
                ecosystems = [
                    ''
                    ],
                size = '',
                volume = '',
                gas_limit = '',
                gas_used = '',
                atomic = True,
                transactions = [
                    ''
                    ],
                burned_fees = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                current_block_number = 1.337
            )
        else:
            return V2NetworkNetworkIdEvmChainIdBlocksGet200ResponseItemsInner(
                number = 1.337,
                id = '',
                parent = '',
                chain_id = '',
                size = '',
                volume = '',
                gas_limit = '',
                gas_used = '',
                atomic = True,
                transactions = [
                    ''
                    ],
                burned_fees = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testV2NetworkNetworkIdEvmChainIdBlocksGet200ResponseItemsInner(self):
        """Test V2NetworkNetworkIdEvmChainIdBlocksGet200ResponseItemsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
